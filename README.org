#+TITLE: README
#+DESCRIPTION: README for ob-coq
#+AUTHOR: Michael Herstine
#+EMAIL: sp1ff@pobox.com
#+DATE: <2024-04-09 Tue 17:23>
#+AUTODATE: t
#+STARTUP: overview

* Introduction

ob-coq provides [[https://orgmode.org/][Org]] [[https://orgmode.org/worg/org-contrib/babel/intro.html][Babel]] support for evaluating source blocks written in [[http://coq.inria.fr][Coq]].

[[https://www.gnu.org/software/emacs/][Emacs]] [[https://orgmode.org/][Org Mode]] is a "major mode for keeping notes, authoring documents, computational notebooks, literate programming, maintaining to-do lists, planning projects, and more..." Like any other markup language, one can embed snippets of source code in Org Mode documents. Unlike other markup languges, however, Org Mode can evaluate those source blocks, passing them input from the Org Mode document itself, collecting their results, and passing _those_ on to other source blocks.

[[https://orgmode.org/][Org Mode]] ships with support for many languages (C/C++, bash, awk & Python to name just a few). This package provides support for [[http://coq.inria.fr][Coq]], a proof assistant, which provides a dependently-typed functional programming language. As part of the implementation, it also provides =inf-coq=, a comint-based major mode for interacting with =coqtop= in an inferior process.
* License

This code is released under the [[https://www.gnu.org/licenses/gpl-3.0.en.html][GPL version 3]].
* Pre-requisites

ob-coq requires Emacs, Org Mode & Coq.
* Installation

At present the package is only available as source:

#+BEGIN_SRC bash
  git clone git@github.com:sp1ff/ob-coq.git
  cd ob-coq
  ./bootstrap
  ./configure
  make
  make check
  sudo make install
#+END_SRC

The build process _does_ make an Emacs package, so you can also do:

#+BEGIN_SRC bash
  # as above...
  make check
  make dist
#+END_SRC

to produce an Emacs package file (=ob-coq-0.0.2.tar=) which you can install with =package-install-file= in your Emacs.
* Status & Roadmap

This is first code, and I've tried to indicate that with the version number (0.0.x). At the time of this writing, it only supports collecting results as =output= (as opposed to =result=). This reflects what I see as the primary use case for ob-coq: building Coq developments in Org Mode rather than plain Coq (i.e. =.v=) files.

I started this project because, as I'm learning Coq, I wanted to evaluate Coq source blocks in my Org files. I found an earlier [[https://git.sr.ht/~bzg/org-contrib/tree/master/item/lisp/ob-coq.el][ob-coq.el]] under [[https://git.sr.ht/~bzg/org-contrib/][org-contrib]] (along with an request for maintainers). It seems incomplete and it depends upon the file =coq-inferior.el= which used to be part of Coq, but was removed in 2018.
